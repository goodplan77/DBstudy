DROP TABLE TB_CATEGORY CASCADE CONSTRAINTS;
DROP TABLE TB_CLASS_TYPE;
-- 1.
CREATE TABLE TB_CATEGORY (
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
);

-- 2.
CREATE TABLE TB_CLASS_TYPE (
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10)
);

-- 3.
ALTER TABLE TB_CATEGORY
ADD CONSTRAINT TC_PK_NAME PRIMARY KEY (NAME);

-- 4.
ALTER TABLE TB_CLASS_TYPE
MODIFY NAME CONSTRAINT TC_NN_NAME NOT NULL;

-- 5.
ALTER TABLE TB_CATEGORY
MODIFY NAME VARCHAR2(20);

ALTER TABLE TB_CLASS_TYPE
MODIFY NO VARCHAR2(10)
MODIFY NAME VARCHAR2(20);

-- 6.
ALTER TABLE TB_CATEGORY
RENAME COLUMN NAME TO CATEGORY_NAME;

ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NO TO CATEGORY_NO
RENAME COLUMN NAME TO CATEGORY_NAME;

-- 7.
ALTER TABLE TB_CATEGORY RENAME CONSTRAINT TC_PK_NAME TO PK_CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME CONSTRAINT SYS_C008544 TO PR_CLASS_TYPE_NO;

-- 8.
INSERT INTO TB_CATEGORY VALUES ('공학','Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학','Y');
INSERT INTO TB_CATEGORY VALUES ('의학','Y');
INSERT INTO TB_CATEGORY VALUES ('예체능','Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회','Y');
COMMIT;

-- 9.
ALTER TABLE TB_DEPARTMENT
ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY (CATEGORY) REFERENCES TB_CATEGORY(CATEGORY_NAME);

-- 10.
--GRANT CREATE VIEW TO C##WORKBOOK;
CREATE VIEW VW_학생일반정보
AS (SELECT STUDENT_NO , STUDENT_NAME , STUDENT_ADDRESS  FROM TB_STUDENT);

-- 10 풀이
CREATE VIEW VW_학생일반정보 (학번 , 학생이름 , 주소)
AS SELECT STUDENT_NO , STUDENT_NAME , STUDENT_ADDRESS 
    FROM TB_STUDENT;

-- 11.
CREATE VIEW VW_지도면담 (학생이름 , 학과이름 , 지도교수이름)
AS 
SELECT STUDENT_NAME , DEPARTMENT_NAME , PROFESSOR_NAME
FROM TB_STUDENT S
JOIN TB_DEPARTMENT D USING (DEPARTMENT_NO)
LEFT JOIN TB_PROFESSOR P ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
ORDER BY DEPARTMENT_NAME;

-- 11 풀이
CREATE VIEW VW_지도면담 (학생이름 , 학과이름 , 지도교수이름)
AS SELECT   STUDENT_NAME,
            DEPARTMENT_NAME,
            PROFESSOR_NAME
    FROM TB_STUDENT T
    LEFT JOIN TB_PROFESSOR ON COACH_PROFESSOR_NO = PROFESSOR_NO
    JOIN TB_DEPARTMENT D ON T.DEPARTMENT_NO = D.DEPARTMENT_NO
    ORDER BY 2;

-- 12.
CREATE VIEW VW_학과별학생수
AS SELECT DEPARTMENT_NAME , COUNT(*) AS "STUDENT_COUNT"
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING (DEPARTMENT_NO)
GROUP BY DEPARTMENT_NAME;

-- 12 풀이
CREATE OR REPLACE VIEW VW_학과별학생수 (DEPARTMENT_NAME , STUDENT_COUNT)
AS SELECT DEPARTMENT_NAME , COUNT(STUDENT_NO)
    FROM TB_DEPARTMENT
    LEFT JOIN TB_STUDENT USING (DEPARTMENT_NO)
    GROUP BY DEPARTMENT_NAME;
    
-- 13.
UPDATE VW_학생일반정보 SET
STUDENT_NAME = 'AAAAA'
WHERE STUDENT_NO = 'A213046';

-- 13 풀이
SELECT * FROM VW_학생일반정보;
UPDATE VW_학생일반정보 SET 학생이름 = '민경민' WHERE 학번 = 'A213046';

-- 14.
CREATE OR REPLACE VIEW VW_학생일반정보
AS (SELECT STUDENT_NO , STUDENT_NAME , STUDENT_ADDRESS  FROM TB_STUDENT)
WITH READ ONLY;

-- 15.
SELECT *
FROM (SELECT CLASS_NO , CLASS_NAME , COUNT(*)
FROM TB_CLASS
JOIN TB_GRADE USING (CLASS_NO)
WHERE TO_NUMBER(SUBSTR(TERM_NO,1,4)) > (2009 - 5)
GROUP BY CLASS_NO , CLASS_NAME
ORDER BY 3 DESC
)
WHERE ROWNUM <=3;

-- 15 풀이
SELECT * FROM (
SELECT
    CLASS_NO 과목번호,
    CLASS_NAME 과목이름,
    COUNT(*) "누적수강생수"
FROM TB_CLASS
JOIN TB_GRADE USING(CLASS_NO)
WHERE SUBSTR(TERM_NO,1,4) > (SELECT MAX(SUBSTR(TERM_NO,1,4)) FROM TB_GRADE) - 5
GROUP BY CLASS_NO , CLASS_NAME
ORDER BY 3 DESC
)
WHERE ROWNUM <=3;

-- 15 풀이 2
SELECT * FROM (
SELECT
    CLASS_NO 과목번호,
    CLASS_NAME 과목이름,
    COUNT(*) "누적수강생수"
FROM TB_CLASS
JOIN TB_GRADE USING(CLASS_NO)
WHERE SUBSTR(TERM_NO,1,4) IN (SELECT * FROM (SELECT  SUBSTR(TERM_NO,1,4)
FROM TB_GRADE
GROUP BY SUBSTR(TERM_NO,1,4)
ORDER BY 1 DESC)
WHERE ROWNUM<=5
)
GROUP BY CLASS_NO , CLASS_NAME
ORDER BY 3 DESC
)
WHERE ROWNUM <=3;